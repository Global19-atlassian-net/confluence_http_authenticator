#
# Configuration file for the Confluence RemoteUserAuthenticator
#

# Whether to create user accounts for new users
# Acceptable values: true, false

create.users=true


# Whether existing accounts should have their name and
# email address updated upon login 
# Acceptable values: true, false

update.info=true


# Whether new and existing accounts should have their last login date
# and previous login date updated in user properties upon login 
# Acceptable values: true, false

update.last.login.date=true


# Whether the configuration file should be automatically reloadded when it's changed.
reload.config=false

# When reloading the configuration file, how long to wait (in milliseconds) between
# checking the configuration file for changes?
reload.config.check.interval=5000


# The default group(s) to for newly created users, only used if create.users is true.
#
# Notes:
# * Group name list can be comma or semicolon delimited.
# * Currently groups must pre-exist.

default.roles=confluence-users


# HTTP header names where the user's full name and email address will come from.
# The full name and email address headers need not be populated.

header.fullname = CONF_FULL_NAME
header.email = CONF_EMAIL


# Indication whether the group memberships of the user should be updated after creation.
# (acceptable values: true/false). If true, then group memberships will be added
# (default.roles, and header.dynamicroles depending on the mapping headers)
# whenever the user authenticates, and not just if the user is created by the
# authenticator.

update.roles=true


# Indication whether HTTP header values should be converted to UTF-8 to avoid an issue
# noted by Helsinki University: "where there is something not using utf-8 involved,
# 16-bit characters get bytes 83 c2 inserted between." 

# OPTIONAL
#convert.to.utf8=true


# HTTP header names for which the header values of the headers (not the names) will be
# the keys in the header.dynamicroles mapping below.
#
# Notes:
# * Attribute names are case-insensitive.
# * Attribute name list can be comma or semicolon delimited.

# OPTIONAL
#header.dynamicroles.attributenames=SHIB-EP-ENTITLEMENT, Shib-EP-UnscopedAffiliation


# Here we map HTTP header values, found for the header names specified as 
# header.dynamicroles.attributenames, to a list of group names.
#
# Examples:
# To map "testing" to "test-users" and "qa-test-users" use:
# header.dynamicroles.testing=test-users, qa-test-users
# To map "some:urn:allowedAccess" to "confluence-administrators" using:
# header.dynamicroles.some\:urn\:allowedAccess=confluence-administrators
#
# Notes:
# * Colons need to be escaped by \
# * Value list can be comma or semicolon delimited.
# * Currently groups must pre-exist.

# OPTIONAL
#header.dynamicroles.testing=test-users, qa-test-users
#header.dynamicroles.some\:urn\:organization.com\:role\:manage=confluence-administrators


# OPTIONAL
# Normally, users added to a group based on Shibboleth attributes would stay in
# the group forever, even if they no longer have the attribute.  The
# purge.roles feature allows to specify a list of groups which should be
# automatically purged of any users who no longer have the attributes to regain
# entry.
# When loggin in, a user will be automatically removed from the group IFF the
# user would not be added to the group (either via header.dynamicroles or
# default.roles).  This feature takes effect only when update.roles is true.
#
# Example:
#purge.roles=test-users,qa-test-users

